import org.jsonschema2pojo.SourceType

plugins {
    id 'com.github.eirnym.js2p' version '1.0'
}

dependencies {
    implementation 'javax.validation:validation-api:1.1.0.Final'
    implementation 'org.apache.commons:commons-lang3:3.11'
}

jsonSchema2Pojo {
    sourceType = SourceType.YAMLSCHEMA
    source = files("${sourceSets.main.output.resourcesDir}/airbyte_protocol")
    targetDirectory = new File(project.buildDir, 'generated/src/gen/java/')
    removeOldOutput = true

    targetPackage = 'io.airbyte.protocol.models'

    useLongIntegers = true
    generateBuilders = true
    includeConstructors = false
    includeSetters = true
}

Task publishArtifactsTask = getPublishArtifactsTask("$rootProject.ext.version", project)

task generatePythonPydanticV1ClassFiles(type: Exec) {
    inputs.dir 'src/main/resources/airbyte_protocol'
    inputs.dir 'bin'
    outputs.dir 'python/airbyte_protocol/airbyte_protocol/models'

    commandLine 'bin/generate-python-pydantic-docker.sh'
}

task generatePythonPydanticV2ProtocolClassFiles(type: Exec) {
    inputs.dir 'src/main/resources/airbyte_protocol'
    inputs.dir 'bin'
    outputs.dir 'python/airbyte_protocol_pdv2/airbyte_protocol/models'

    commandLine 'bin/generate-python-pydantic-v2-docker.sh'
}

task generateTypescriptProtocolClassFiles(type: Exec) {
    inputs.dir 'src/main/resources/airbyte_protocol'
    inputs.dir 'bin'
    outputs.dir 'typescript/dist'

    commandLine 'bin/generate-typescript-classes-docker.sh'
}
